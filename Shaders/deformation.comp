#version 450
//uniform writeonly image2D noiseImg;
layout(binding = 1, rgba8) uniform writeonly image2D deformationImgOut;
layout(binding = 2, rgba8) uniform readonly image2D deformationImgIn;
uniform sampler2D heightTexture;
uniform int call_no;


layout( local_size_x = 32, local_size_y = 32 ) in;

void main() {
    vec2 vertex = vec2(ivec2(gl_GlobalInvocationID.xy)) / vec2(1024.0);
    float heightmapHeight = texture2D(heightTexture,vertex).r - 0.6;
         if(heightmapHeight >=0.35){
             heightmapHeight = 0.0;
         }
         heightmapHeight = heightmapHeight + 0.6;
    //vec4 heightmapVec = vec4(0.5,0.5,heightmapHeight,1.0);
    vec3 heightmapVec = vec3(heightmapHeight,heightmapHeight,heightmapHeight);
    //vertex = vec2(-5.0,-5.0) + (vertex / 102.4);
    vec4 original_deformation = imageLoad(deformationImgIn, ivec2(gl_GlobalInvocationID.xy));
    if(call_no == 0){
        imageStore(deformationImgOut,ivec2(gl_GlobalInvocationID.xy), vec4(heightmapVec,1.0));// + vec4(0.6));
    }
    else{
        float value_to_store;
        if(original_deformation.x < heightmapVec.x){
            value_to_store = original_deformation.x;
        }
        else{
            value_to_store = heightmapVec.x;
        }
        imageStore(deformationImgOut, ivec2(gl_GlobalInvocationID.xy), vec4(value_to_store,value_to_store,value_to_store,1.0));
    }
    
}